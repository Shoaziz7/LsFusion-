MODULE HockeyStats;
REQUIRE System;

// logical model
CLASS Team 'Команда';
name 'Название команды' = DATA STRING[30] (Team) IN base;

CLASS Game 'Игра';
date 'Дата' = DATA DATE (Game);
hostTeam = DATA Team (Game);
guestTeam = DATA Team (Game);
hostTeamName 'Хозяева' (Game game) = name(hostTeam(game));
guestTeamName 'Гости' (Game game) = name(guestTeam(game));

CONSTRAINT hostTeam(Game team) == guestTeam(team) CHECKED BY hostTeam, guestTeam MESSAGE 'Хозяева и гостевая команды должны быть разными';

hostGoals 'Х голы' = DATA INTEGER (Game);
guestGoals 'Г голы' = DATA INTEGER (Game);

CONSTRAINT hostGoals(Game game) == guestGoals(game) MESSAGE 'Игра не может закончиться вничью';

winner(Game game) = IF hostGoals(game) > guestGoals(game)
    THEN hostTeam(game)
    ELSE guestTeam(game);

looser(Game game) = IF hostGoals(game) > guestGoals(game)
    THEN guestTeam(game)
    ELSE hostTeam(game);

CLASS GameResult 'Р/И' {
    win 'П',
    winOT 'ПО',
    winSO 'ПБ'
}

resultName 'ИМЯ' (GameResult game) = staticCaption(game) IF game IS GameResult IN base;

userResult = DATA GameResult (Game);
result (Game game) = OVERRIDE userResult(game),
    (GameResult.win IF ((hostGoals(game) (-) guestGoals(game)) > 1 OR (guestGoals(game) (-) hostGoals(game)) > 1));
resultName 'Р/И' (Game game) = resultName(result(game));

CONSTRAINT ((hostGoals(Game game) (-) guestGoals(game)) > 1 OR (hostGoals(game) (-) guestGoals(game)) < -1) AND userResult(game)
    MESSAGE 'Результат игры определен автоматически';

CONSTRAINT ((hostGoals(Game game) (-) guestGoals(game)) < 2 AND (hostGoals(game) (-) guestGoals(game)) > -2) AND NOT userResult(game)
    MESSAGE 'Укажите результат игры';

//Phisical model
hostGamePlayed = GROUP SUM 1 BY hostTeam(Game game);
guestGamesPlayed = GROUP SUM 1 BY guestTeam(Game game);
gamesPlayed 'И' (Team team) = hostGamePlayed(team) (+) guestGamesPlayed(team);

gameWonBy(Team team, GameResult type) = OVERRIDE [GROUP SUM 1 BY winner(Game game), result(game)](team, type), 0;

gamesWon 'П' (Team team) = gameWonBy(team, GameResult.win);
gamesWonOT 'ПО' (Team team) = gameWonBy(team, GameResult.winOT);
gamesWonSO 'ПБ' (Team team) = gameWonBy(team, GameResult.winSO);

gameLostBy(Team team, GameResult type) = OVERRIDE [GROUP SUM 1 BY looser(Game game), result(game)](team, type), 0;

gamesLost 'П' (Team team) = gameLostBy(team, GameResult.win);
gamesLostOT 'ПО' (Team team) = gameLostBy(team, GameResult.winOT);
gamesLostSO 'ПБ' (Team team) = gameLostBy(team, GameResult.winSO);

points 'Очки' (Team team) = gamesWon(team) * 3 + (gamesWonSO(team) + gamesWonOT(team)) * 2 + gamesLostOT(team) + gamesLostSO(team);

hostGoalsScored = GROUP SUM hostGoals(Game game) BY hostTeam(game);
guestGoalsScored = GROUP SUM guestGoals(Game game) BY guestTeam(game);
goalsScored 'Кол-во забитых голов' (Team team) = OVERRIDE hostGoalsScored(team) (+) guestGoalsScored(team), 0 IF team IS Team;

hostGoalsConceded = GROUP SUM guestGoals(Game game) BY hostTeam(game);
guestGoalsConceded = GROUP SUM hostGoals(Game game) BY guestTeam(game);
goalsConceded 'Кол-во пропущенных голов' (Team team) = OVERRIDE hostGoalsConceded(team) (+) guestGoalsConceded(team), 0 IF team IS Team;

place 'Место' (Team team) = PARTITION SUM 1 ORDER DESC points(team), gamesWon(team), gamesWonOT(team), gamesWonSO(team),
    (OVERRIDE goalsScored(team) (-) goalsConceded(team), 0), goalsScored(team);

FORM MainForm 'Турнирная таблица'
    OBJECTS game = Game
    PROPERTIES(game) date, hostTeamName, hostGoals, guestGoals, guestTeamName, resultName, NEW, DELETE
;

EXTEND FORM MainForm
    OBJECTS team = Team
    PROPERTIES(team) place, name, gamesPlayed, gamesWon, gamesWonOT, gamesWonSO,
        gamesLostSO, gamesLostOT, gamesLost, goalsScored, goalsConceded, points, NEW, DELETE
    ORDERS place(team)
;

NAVIGATOR {
    NEW MainForm FIRST;
}

